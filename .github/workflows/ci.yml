name: CI

on:
  pull_request:
    paths:
      - "workspaces/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: read

env:
  GITHUB_TOKEN: ${{ github.token }}
  YARN_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  find-changed-workspaces:
    name: Detect workspace changes
    runs-on: [self-hosted, linux, x64, philips-code-hub, ubuntu-latest]
    outputs:
      workspaces: ${{ steps.find-changed-workspaces.outputs.workspaces }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 20

      - name: Enable Corepack
        run: corepack enable

      - name: Fetch previous commit for check
        run: git fetch origin '${{ github.event.pull_request.base.sha }}'

      - name: Find changed workspaces
        id: find-changed-workspaces
        run: node ./scripts/ci/list-workspaces-with-changes.js
        env:
          COMMIT_SHA_BEFORE: "${{ github.event.pull_request.base.sha }}"

  ci:
    name: Workspace ${{ matrix.workspace }}, CI step for node ${{ matrix.node-version }}
    runs-on: [self-hosted, linux, x64, philips-code-hub, ubuntu-latest]
    needs: find-changed-workspaces
    if: ${{ needs.find-changed-workspaces.outputs.workspaces != '[]' }}
    strategy:
      matrix:
        workspace: ${{ fromJSON(needs.find-changed-workspaces.outputs.workspaces) }}
        node-version: [18.x, 20.x]
      fail-fast: false
    defaults:
      run:
        working-directory: ./workspaces/${{ matrix.workspace }}

    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=8192

    steps:
      - name: Checkout main branch for tests purposes
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: main
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Enable Corepack
        run: corepack enable

      - name: yarn install
        run: yarn install --immutable

      - name: check for missing repo fixes
        run: yarn fix --check
        
      - name: check backstage publishing config
        shell: bash
        run: |
          # Run the backstage-cli repo fix command
          yarn backstage-cli repo fix --publish
          
          # Check if any package.json files were modified
          if git diff --name-only | grep -q "package.json"; then
            echo "::error::The 'yarn backstage-cli repo fix --publish' command has made changes to package.json files. Please run this command locally and commit the changes."
            echo "Modified files:"
            git diff --name-only | grep "package.json"
            # Fail the build with a non-zero exit code
            exit 1
          fi

      - name: validate config
        if: ${{ hashFiles('app-config.yaml') != '' }}
        run: yarn backstage-cli config:check --lax

      - name: type checking and declarations
        run: yarn tsc:full

      - name: prettier
        run: yarn prettier:check

      - name: check api reports and generate API reference
        run: yarn build:api-reports:only --ci

      - name: build all packages
        run: yarn backstage-cli repo build --all

      - name: lint
        run: yarn backstage-cli repo lint --since origin/main

      - name: test changed packages
        run: yarn backstage-cli repo test --coverage --maxWorkers=3

      # Prepare SonarQube token name based on workspace name
      - name: Set SonarQube token name
        if: hashFiles(format('workspaces/{0}/sonar-project.properties', matrix.workspace)) != ''
        id: sonar-token-name
        run: |
          WORKSPACE="${{ matrix.workspace }}"
          # Remove -workspace suffix if present
          if [[ "$WORKSPACE" == *-workspace ]]; then
            WORKSPACE=${WORKSPACE%-workspace}
          fi
          # Replace hyphens with underscores and convert to uppercase
          TOKEN_NAME=$(echo "${WORKSPACE}" | tr '-' '_' | tr ' ' '_' | tr '[:lower:]' '[:upper:]')
          echo "token_name=${TOKEN_NAME}_SONAR_TOKEN" >> $GITHUB_OUTPUT

      - name: SonarQube Scan
        if: hashFiles(format('workspaces/{0}/sonar-project.properties', matrix.workspace)) != ''
        uses: SonarSource/sonarqube-scan-action@aa494459d7c39c106cc77b166de8b4250a32bb97 # v5.1.0
        with:
          projectBaseDir: ./workspaces/${{ matrix.workspace }}
        env:
          # Secret name format: WORKSPACE_NAME_SONAR_TOKEN (should match the sub-project name used when creating the SQ project in the developer portal)
          # Naming rules: uppercase, hyphens replaced with underscores, '-workspace' suffix removed if present
          SONAR_TOKEN: ${{ secrets[steps.sonar-token-name.outputs.token_name] }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: ensure clean working directory
        run: |
          if files=$(git ls-files --exclude-standard --others --modified) && [[ -z "$files" ]]; then
            exit 0
          else
            echo ""
            echo "Working directory has been modified:"
            echo ""
            git status --short
            echo ""
            exit 1
          fi

  verify:
    name: Workspace ${{ matrix.workspace }}, Verify step
    runs-on: [self-hosted, linux, x64, philips-code-hub, ubuntu-latest]
    needs: find-changed-workspaces
    strategy:
      matrix:
        workspace: ${{ fromJSON(needs.find-changed-workspaces.outputs.workspaces) }}
      fail-fast: false
    steps:
      - name: Checkout head branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Setup node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 20.x

      - name: Enable Corepack
        run: corepack enable

      - name: Install root dependencies
        run: yarn install --immutable
      - name: Verify lockfile duplicates
        run: node scripts/ci/verify-lockfile-duplicates.js workspaces/${{ matrix.workspace }}/yarn.lock
      - name: Verify changesets
        run: node scripts/ci/verify-changesets.js ${{ matrix.workspace }}
  result:
    if: ${{ always() }}
    name: check all required jobs
    runs-on: [self-hosted, linux, x64, philips-code-hub, ubuntu-latest]
    needs: [ci, verify]
    steps:
      - run: exit 1
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
            || contains(needs.*.result, 'skipped')
          }}

  # Commented out until GHAS is activated on the repo
  # dependency-review:
  #   runs-on: [self-hosted, linux, x64, philips-code-hub, ubuntu-latest]
  #   steps:
  #     - name: "Checkout Repository"
  #       uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #     - name: "Dependency Review"
  #       uses: actions/dependency-review-action@72eb03d02c7872a771aacd928f3123ac62ad6d3a # v4.3.3
